<?php

namespace App\Repository;

use App\Entity\LotExploitation;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * @method LotExploitation|null find($id, $lockMode = null, $lockVersion = null)
 * @method LotExploitation|null findOneBy(array $criteria, array $orderBy = null)
 * @method LotExploitation[]    findAll()
 * @method LotExploitation[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 */
class LotExploitationRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, LotExploitation::class);
    }

    /**
     * @return LotExploitation[] Returns an array of LotExploitation objects
     */
    public function findByExpe($idExpe)
    {
        return $this->createQueryBuilder('l')
            ->andWhere('l.dateFinLot is null') // a enlever pour tous les voir
            ->andWhere('l.idExpe = :val')
            ->setParameter('val', $idExpe)
            ->groupBy('l.idLot')
            ->getQuery()
            ->getResult();
    }
    /**
     * @return LotExploitation[] Returns an array of LotExploitation objects
     */
    public function findAllByExpe($idExpe)
    {
        return $this->createQueryBuilder('l')
            ->andWhere('l.idExpe = :val')
            ->setParameter('val', $idExpe)
            ->groupBy('l.idLot')
            ->getQuery()
            ->getResult();
    }

    /**
     * @return LotExploitation[] Returns an array of LotExploitation objects
     */
    public function findByExpeAndLot($idExpe, $idLot)
    {
        return $this->createQueryBuilder('l')
            ->andWhere('l.idExpe = :idExpe')
            ->andWhere('l.idLot = :idLot')
            ->setParameter('idExpe', $idExpe)
            ->setParameter('idLot', $idLot)
            ->getQuery()
            ->getResult()
        ;
    }

    /**
     * @return LotExploitation[] Returns an array of LotExploitation objects
     */
    public function findMouvByIndi($idIndi)
    {
        return $this->createQueryBuilder('l')
            ->andWhere('l.idIndi = :val')
            ->setParameter('val', $idIndi)
            ->groupBy('l.idMouvement')
            ->getQuery()
            ->getResult();
    }

    


    /*
    public function findOneBySomeField($value): ?LotExploitation
    {
        return $this->createQueryBuilder('e')
            ->andWhere('e.exampleField = :val')
            ->setParameter('val', $value)
            ->getQuery()
            ->getOneOrNullResult()
        ;
    }
    */
}

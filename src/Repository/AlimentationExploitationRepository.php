<?php

namespace App\Repository;

use App\Entity\AlimentationExploitation;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * @method AlimentationExploitation|null find($id, $lockMode = null, $lockVersion = null)
 * @method AlimentationExploitation|null findOneBy(array $criteria, array $orderBy = null)
 * @method AlimentationExploitation[]    findAll()
 * @method AlimentationExploitation[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 */
class AlimentationExploitationRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, AlimentationExploitation::class);
    }

    /**
     * @return AlimentationExploitation[] Returns an array of AlimentationExploitation objects, page Alimentation
     */
    public function findAlimByLot($idLot)
    {
        return $this->createQueryBuilder('a')
            ->andWhere('a.idLot = :val')
            ->setParameter('val', $idLot)
            ->groupBy('a.idAlimLot')
            ->getQuery()
            ->getResult();
    }

    /**
    * @return AlimentationExploitation[] Returns an array of AlimentationExploitation objects, page Bilan Zootechnique
     */
    public function findAlimByLotAndDate($idLot, $debut, $fin)
    {
        return $this->createQueryBuilder('a')
            ->andWhere('a.idLot = :lot')
            ->andWhere('a.dateConditionAlim >= :debut')
            ->andWhere('a.dateConditionAlim <= :fin')
            ->setParameter('lot', $idLot)
            ->setParameter('debut', $debut)
            ->setParameter('fin', $fin)
            ->getQuery()
            ->getResult();
    }

    /*
    public function findOneBySomeField($value): ?LotExploitation
    {
        return $this->createQueryBuilder('e')
            ->andWhere('e.exampleField = :val')
            ->setParameter('val', $value)
            ->getQuery()
            ->getOneOrNullResult()
        ;
    }
    */
}

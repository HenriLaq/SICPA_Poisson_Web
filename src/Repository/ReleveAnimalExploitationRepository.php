<?php

namespace App\Repository;

use App\Entity\ReleveAnimalExploitation;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\Persistence\ManagerRegistry;

/**
 * @method ReleveAnimalExploitation|null find($id, $lockMode = null, $lockVersion = null)
 * @method ReleveAnimalExploitation|null findOneBy(array $criteria, array $orderBy = null)
 * @method ReleveAnimalExploitation[]    findAll()
 * @method ReleveAnimalExploitation[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 */
class ReleveAnimalExploitationRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, ReleveAnimalExploitation::class);
    }

    /**
     * @return ReleveAnimalExploitation[] Returns an array of ReleveAnimalExploitation objects: Page releve animal
     * Retourne les releves animaux
     */
    public function findRelByIndi($idIndi)
    {
        return $this->createQueryBuilder('r')
            ->andWhere('r.idTypeRelAni = 1 OR r.idTypeRelAni = 4 OR r.idTypeRelAni = 12')
            ->andWhere('r.idIndi = :indi')
            ->setParameter('indi', $idIndi)
            ->getQuery()
            ->getResult();
    }

    /**
     * @return ReleveAnimalExploitation[] Returns an array of ReleveAnimalExploitation objects: bilan zootechnique
     * Retourne les releves animaux
     */
    public function findByIndiForm($idIndi)
    {
        return $this->createQueryBuilder('r')
            ->andWhere('r.idTypeRelAni = 1 OR r.idTypeRelAni = 4')
            ->andWhere('r.idIndi = :indi')
            ->setParameter('indi', $idIndi)
            ->getQuery()
            ->getResult();
    }

    /**
     * @return ReleveAnimalExploitation[] Returns an array of ReleveAnimalExploitation objects: bilan zootechnique
     * Retourne les releves animaux
     */
    public function findByRelId($idRel)
    {
        return $this->createQueryBuilder('r')
            ->andWhere('r.idTypeRelAni = 1 OR r.idTypeRelAni = 4')
            ->andWhere('r.idRelAni = :rel')
            ->setParameter('rel', $idRel)
            ->getQuery()
            ->getResult();
    }

    /**
     * @return ReleveAnimalExploitation[] Returns an array of ReleveAnimalExploitation objects: Page mouvement
     * Retourne les releves animaux
     */
    public function findRelByMouv($idMouv)
    {
        return $this->createQueryBuilder('r')
            ->andWhere('r.idTypeRelAni = 14')
            ->andWhere('r.idMouvement = :val')
            ->setParameter('val', $idMouv)
            ->getQuery()
            ->getResult();
    }

    /**
     * @return ReleveAnimalExploitation[] Returns an array of ReleveAnimalExploitation objects: Page mouvement
     * Retourne les releves animaux
     */
    public function findOneRelByMouv($idMouv)
    {
        return $this->createQueryBuilder('r')
            ->andWhere('r.idTypeRelAni = 14')
            ->andWhere('r.idMouvement = :val')
            ->setParameter('val', $idMouv)
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * @return ReleveAnimalExploitation[] Returns an array of ReleveAnimalExploitation objects: Page Lot
     * Retourne les releves animaux
     */
    public function findRelByIndiDuLot($idIndi)
    {
        return $this->createQueryBuilder('r')
            ->andWhere('r.idTypeRelAni = 4')
            ->andWhere('r.idIndi = :val')
            ->setParameter('val', $idIndi)
            ->getQuery()
            ->getResult();
    }

    /**
     * @return ReleveAnimalExploitation[] Returns an array of ReleveAnimalExploitation objects: bilan zootechnique
     * Retourne les releves animaux
     */
    public function findRelByMouvForm($idMouv)
    {
        return $this->createQueryBuilder('r')
            ->andWhere('r.idMouvement = :idMouv')
            ->setParameter('idMouv', $idMouv)
            ->getQuery()
            ->getResult();
    }

    /**
     * @return ReleveAnimalExploitation[] Returns an array of ReleveAnimalExploitation objects: bilan zootechnique
     * Retourne les releves animaux
     */
    public function findRelByIdAndDateDessus($idRelAni, $date)
    {
        return $this->createQueryBuilder('r')
            ->andWhere('r.idRelAni = :idRelAni')
            ->andWhere('r.dateRelAni >= :date')
            ->setParameter('idRelAni', $idRelAni)
            ->setParameter('date', $date)
            ->orderBy('r.dateRelAni', 'ASC')
            ->getQuery()
            ->getResult();
    }

    /**
     * @return ReleveAnimalExploitation[] Returns an array of ReleveAnimalExploitation objects: bilan zootechnique
     * Retourne les releves animaux
     */
    public function findRelByIdAndDateDessous($idRelAni, $date)
    {
        return $this->createQueryBuilder('r')
        ->andWhere('r.idRelAni = :idRelAni')
        ->andWhere('r.dateRelAni <= :date')
        ->setParameter('idRelAni', $idRelAni)
        ->setParameter('date', $date)
        ->orderBy('r.dateRelAni', 'DESC')
        ->getQuery()
        ->getResult();
    }

    /*
    public function findOneBySomeField($value): ?ReleveAnimalExploitation
    {
        return $this->createQueryBuilder('i')
            ->andWhere('i.exampleField = :val')
            ->setParameter('val', $value)
            ->getQuery()
            
        ;
    }
    */
}

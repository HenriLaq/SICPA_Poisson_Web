{% extends 'base.html.twig' %}

{% block title %}Lots
{% endblock %}

{% block body %}
	<div class="container-fluid">
		<nav aria-label="breadcrumb">
			<ol class="breadcrumb">
				<li class="breadcrumb-item">
					<a href="{{ path('experimentation_index') }}">Experimentations</a>
				</li>
				<li class="breadcrumb-item active" aria-current="page">Lots</li>
			</ol>
		</nav>

		<h1>Lots</h1>

		<table class="table table-bordered table-hover" id="tableLot">
			<thead>
				<tr>
					<th class="notexport hidden">idLot</th>
					<th>Nom</th>
					<th class="notexport">Début</th>
					<th class="hidden">Début</th>
					<th class="notexport">Fin</th>
					<th class="hidden">Fin</th>
					<th>Bassin</th>

					<!--<th>Paramètre croissance</th><th>Aliment Actuel</th>-->
					<th class="notexport">actions</th>
				</tr>
			</thead>
			<tbody>
				<script>
					var donnees = {};
					var rangee = 0;
				</script>

				{% set i = 0 %}
				{% for lot in lots %}
					<tr {% if lot.dateFinLot is not null %} id="hide{{ i }}" style="display:none;" {% endif %} onclick="test(this)">
						<td class="hidden">{{ lot.idLot }}</td>
						<td>{{ lot.nomLot }}</td>
						<td>
							<span style="display:none;">{{ lot.dateDebLot ? lot.dateDebLot|date('Y-m-d') : ''}}</span>
							{{ lot.dateDebLot ? lot.dateDebLot|date('d-m-Y') : '' }}</td>
						<td class="hidden">{{ lot.dateDebLot ? lot.dateDebLot|date('d-m-Y') : ''}}</td>
						<td>
							<span style="display:none;">{{ lot.dateFinLot ? lot.dateFinLot|date('Y-m-d') : ''}}</span>
							{{ lot.dateFinLot ? lot.dateFinLot|date('d-m-Y') : '' }}</td>
						<td class="hidden">{{ lot.dateFinLot ? lot.dateFinLot|date('d-m-Y') : ''}}</td>
						<td>
							<a href="{{ path('bassin_index', {'idLot': lot.idLot, 'idExpe': idExpe, 'idBassin': lot.idBassin}) }}">{{ lot.nomBassin }}</a>
						</td>
						<td class="col-sm-3">
							<a href="{{ path('individu_index', {'idLot': lot.idLot, 'idExpe': idExpe}) }}" style="margin:3px;" class="btn btn-primary">Voir les individus</a>
							<a href="{{ path('mouvement_index', {'idLot': lot.idLot, 'idExpe': idExpe}) }}" style="margin:3px;" class="btn btn-primary">Voir les mouvements</a>
							<a href="{{ path('alimentation_index', {'idLot': lot.idLot, 'idExpe': idExpe}) }}" style="margin:3px;" class="btn btn-primary">Voir l'alimentation</a>
							<a href="{{ path('alimentation_index', {'idLot': lot.idLot, 'idExpe': idExpe}) }}" style="margin:3px;" class="btn btn-primary">Voir les traitements</a>
						</td>
					</tr>

					<script>
						var donneesTemp = {};
						var relAni = new Array();
					</script>
					{# Pour les indivs de ces lots, Si c'est le bon lot #}
					{% for individu in individus|filter(individu => individu.idLot == lot.idLot) %}
						{# Pour les releves des indivs de ces lots par Indi #}
						{% for releves in releveParIndi %}
							{# Pour les releves de ces lots, Si c'est le bon indiv ET le bon type de releve #}
							{% for releve in releves|filter(releve => releve.idIndi == individu.idIndi)|filter(releve => releve.idTypeRelAni == 4) %}
								<script>
									var year = ( ({{ releve.dateRelAni ? releve.dateRelAni|date('Y') : '' }}).toString() );
									var month = ( ({{ releve.dateRelAni ? releve.dateRelAni|date('m') : '' }}).toString() );
									var day = ( ({{ releve.dateRelAni ? releve.dateRelAni|date('d') : '' }}).toString() );
									
									{# donnesTemp est en clef => tableau (date => valeurs), on fait la moyenne du tableau avant de l'ajouter a donnees #}
									if (donneesTemp[(day.concat('/',month,'/',year))]){
										if (!(relAni.includes({{releve.idRelAni}}))){
											donneesTemp[(day.concat('/',month,'/',year))].push({{ releve.valeurRelAni }});
											relAni.push({{releve.idRelAni}})
										}
									}else{
										donneesTemp[(day.concat('/',month,'/',year))] = new Array();
										donneesTemp[(day.concat('/',month,'/',year))].push({{ releve.valeurRelAni }});
									}
								</script>
							{% endfor %}
						{% endfor %}
					{% endfor %}

					<script>
						var iterator = Object.keys(donneesTemp);
						for (const key of iterator){
							var total = 0;
							for (const value of donneesTemp[key]){
								total += value;
							}
							donneesTemp[key] = total/donneesTemp[key].length;
						}
						donnees[{{ lot.idLot }}] = donneesTemp;
						
						{# plus petite date de releve (pour choisir la date minimum) #}
						var minDate=new Date(Math.min.apply(null,iterator));
					</script>

					
						
					{% set i = i + 1 %}
				{% else %}
					<tr>
						<td colspan="25">Aucun résultat</td>
					</tr>
				{% endfor %}
			</tbody>
		</table>

		{% if lots|length>1 %}
			<div class="checkbox-custom chekbox-primary">
				<input onchange="toggle_by_class({{ i }});" type="checkbox">
				<label>Afficher les lots fermés</label>
			</div>
		{% endif %}

		<hr>

		<div><canvas id="chartLot" style="max-width:100%; max-height:500px;"></canvas></div>
		<script>
			console.log(donnees);
			const ctx = document.getElementById('chartLot').getContext('2d');
			const data = {
				type: 'line',
				data: {
					labels: null,
					datasets: [{
						label: 'Poids moyen',
						data: null,
						backgroundColor: [
							'rgba(255, 0, 0, 0.2)'
						],
						borderColor: [
							'rgba(255, 0, 0, 1)',
						],
						borderWidth: 1
					},{
						label: 'Température',
						data: null,
						backgroundColor: [
							'rgba(0, 255, 0, 0.2)'
						],
						borderColor: [
							'rgba(, 255, 0, 1)',
						],
						borderWidth: 1
					}]
				},
				options: {
					scales: {
						y: {
							beginAtZero: true
						},
						y1: {
							beginAtZero: true,
							position: 'right',
							grid: {
          						drawOnChartArea: false, // only want the grid lines for one axis to show up
        					},
						}
					}
				}
			}
			const myChart = new Chart(ctx, data);
		</script>

		<br><br>
		<a href="{{ path('experimentation_index') }}" class="btn btn-danger">Retour</a>
	</div>
{% endblock %}

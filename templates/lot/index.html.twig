{% extends 'base.html.twig' %}

{% block title %}Lots
{% endblock %}

{% block body %}
	<div class="container-fluid">
		<nav aria-label="breadcrumb">
			<ol class="breadcrumb">
				<li class="breadcrumb-item">
					<a href="{{ path('experimentation_index') }}">Experimentations</a>
				</li>
				<li class="breadcrumb-item active" aria-current="page">Lots</li>
			</ol>
		</nav>

		<h1>Lots</h1>

		<table class="table table-bordered table-hover" id="tableLot">
			<thead>
				<tr>
					<th class="notexport hidden">idLot</th>
					<th>Nom</th>
					<th class="notexport">Début</th>
					<th class="hidden">Début</th>
					<th class="notexport">Fin</th>
					<th class="hidden">Fin</th>
					<th>Bassin</th>
					<!--<th>Paramètre croissance</th><th>Aliment Actuel</th>-->
					<th class="notexport">actions</th>
				</tr>
			</thead>
			<tbody>
				<script>
					var temperatures = {}
					var donneesR = {};
					var donneesP = {};
					var rangee = 0;
				</script>

				{% set i = 0 %}
				{% for lot in lots %}
					<tr {% if lot.dateFinLot is not null %} id="hide{{ i }}" style="display:none;" {% endif %} onclick="test(this)">
						<td class="hidden">{{ lot.idLot }}</td>
						<td>{{ lot.nomLot }}</td>
						<td>
							<span style="display:none;">{{ lot.dateDebLot ? lot.dateDebLot|date('Y-m-d') : ''}}</span>
							{{ lot.dateDebLot ? lot.dateDebLot|date('d-m-Y') : '' }}</td>
						<td class="hidden">{{ lot.dateDebLot ? lot.dateDebLot|date('d-m-Y') : ''}}</td>
						<td>
							<span style="display:none;">{{ lot.dateFinLot ? lot.dateFinLot|date('Y-m-d') : ''}}</span>
							{{ lot.dateFinLot ? lot.dateFinLot|date('d-m-Y') : '' }}</td>
						<td class="hidden">{{ lot.dateFinLot ? lot.dateFinLot|date('d-m-Y') : ''}}</td>
						<td>
							{% if lot.dateFinLot %}
							{% else %}
								<a href="{{ path('bassin_index', {'idLot': lot.idLot, 'idExpe': idExpe, 'idBassin': lot.idBassin}) }}">{{ lot.nomBassin }}</a>
							{% endif %}
						</td>
						<td class="col-sm-3">
							<a href="{{ path('individu_index', {'idLot': lot.idLot, 'idExpe': idExpe}) }}" style="margin:3px;" class="btn btn-primary">Voir les individus</a>
							<a href="{{ path('mouvement_index', {'idLot': lot.idLot, 'idExpe': idExpe}) }}" style="margin:3px;" class="btn btn-primary">Voir les mouvements</a>
							<a href="{{ path('alimentation_index', {'idLot': lot.idLot, 'idExpe': idExpe}) }}" style="margin:3px;" class="btn btn-primary">Voir l'alimentation</a>
							<a href="{{ path('alimentation_index', {'idLot': lot.idLot, 'idExpe': idExpe}) }}" style="margin:3px;" class="btn btn-primary">Voir les traitements</a>
						</td>
					</tr>

					<script>
						var donneesRTemp = {};
						var donneesPTemp = {};
						var temperatureTemp = {};
					</script>
					{# Pour les courbes du bon lot #}
					{% for courbe in courbes|filter(courbe => courbe.idLot == lot.idLot) %}
						<script>
							var year = ( ({{ courbe.datePoint ? courbe.datePoint|date('Y') : '' }}).toString() );
							var month = ( ({{ courbe.datePoint ? courbe.datePoint|date('m') : '' }}).toString() );
							var day = ( ({{ courbe.datePoint ? courbe.datePoint|date('d') : '' }}).toString() );
							if (month.length < 2){
								month = '0' + month;
							}
							var date = (year.concat('-',month,'-',day));
							
							{# donnesTemp est en clef => tableau (date => valeurs), on fait la moyenne du tableau avant de l'ajouter a donnees #}
							if (donneesRTemp[date]){
								donneesRTemp[date].push({{ courbe.poidsReel }});
								donneesPTemp[date].push({{ courbe.poidsPrevu }});
							}else{
								donneesRTemp[date] = new Array();
								donneesRTemp[date].push({{ courbe.poidsReel }});
								donneesPTemp[date] = new Array();
								donneesPTemp[date].push({{ courbe.poidsPrevu }});
							}

							temperatureTemp[date] = {{ courbe.temperature }};
							
						</script>

					{% endfor %}

					<script>
						var iterator = Object.keys(donneesRTemp);
						for (const key of iterator){
							var totalR = 0;
							var totalP = 0;
							for (const value of donneesRTemp[key]){
								totalR += value;
							}
							for (const value of donneesPTemp[key]){
								totalP += value;
							}
							donneesRTemp[key] = totalR/donneesRTemp[key].length;
							donneesPTemp[key] = totalP/donneesPTemp[key].length;
						}
						var donneesRTempRangees = Object.keys(donneesRTemp).sort().reduce(
						(obj, key) => {
							obj[key] = donneesRTemp[key];
							return obj;
						}, {}
						);
						var donneesPTempRangees = Object.keys(donneesPTemp).sort().reduce(
						(obj, key) => {
							obj[key] = donneesPTemp[key];
							return obj;
						}, {}
						);
						donneesR[{{ lot.idLot }}] = donneesRTempRangees;
						donneesP[{{ lot.idLot }}] = donneesPTempRangees;
						temperatures[{{ lot.idLot }}] = temperatureTemp;
					</script>

					
						
					{% set i = i + 1 %}
				{% else %}
					<tr>
						<td colspan="25">Aucun résultat</td>
					</tr>
				{% endfor %}
			</tbody>
		</table>

		{% if lots|length>=1 %}
			<div class="checkbox-custom chekbox-primary">
				<input onchange="toggle_by_class({{ i }});" type="checkbox">
				<label>Afficher les lots fermés</label>
			</div>
		{% endif %}

		<hr>

		<div><canvas id="chartLot" style="max-width:100%; max-height:500px;"></canvas></div>
		{% include 'lot/chart.html.twig' %}

		<br><br>
		<a href="{{ path('experimentation_index') }}" class="btn btn-danger">Retour</a>
	</div>
{% endblock %}
